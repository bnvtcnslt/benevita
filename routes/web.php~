<?php

use App\Http\Controllers\AuthController;
use App\Http\Controllers\ClientController;
use App\Http\Controllers\InformationContactController;
use App\Http\Controllers\MessageController;
use App\Http\Controllers\DashboardController;
use App\Http\Controllers\FrontendController;
use App\Http\Controllers\ServiceController;
use App\Http\Controllers\SocialMediaController;
use App\Http\Controllers\TeamController;
use App\Http\Controllers\TeamMemberController;
use App\Http\Controllers\TestimonialController;
use App\Http\Controllers\YoutubeVideoController;
use Illuminate\Support\Facades\File;
use Illuminate\Support\Facades\Response;
use Illuminate\Support\Facades\Route;

/*
|--------------------------------------------------------------------------
| Public Routes (Bisa diakses tanpa login)
|--------------------------------------------------------------------------
*/

// Route FrontEnd
Route::get('/', [FrontendController::class, 'home'])->name('home');
Route::get('/about', [FrontendController::class, 'about'])->name('about');
Route::get('/services', [FrontendController::class, 'services'])->name('services');
Route::get('/contact', [FrontendController::class, 'contact'])->name('contact');
Route::post('/messages', [MessageController::class, 'store'])->name('messages.store');
Route::get('/messages', [FrontendController::class, 'messages'])->name('messages');
// Auth Routes
Route::get('/login', [AuthController::class, 'index'])->name('auth.index');
Route::post('/login', [AuthController::class, 'verify'])->name('auth.verify');

// Password Reset Routes
Route::group(['middleware' => ['guest']], function () {
    Route::prefix('password')->group(function () {
        Route::get('/forgot', [AuthController::class, 'forgotPassword'])->name('password.request');
        Route::post('/forgot', [AuthController::class, 'sendResetLinkEmail'])->name('password.email');
        Route::get('/reset/{token}', [AuthController::class, 'resetPassword'])->name('password.reset');
        Route::post('/reset/{token}', [AuthController::class, 'updatePassword'])->name('password.update');
    });
});

/*
|--------------------------------------------------------------------------
| Protected Routes (Harus login)
|--------------------------------------------------------------------------
*/
Route::group(['middleware' => ['auth:user']], function () {
    Route::prefix('admin')->group(function () {
        Route::get('/', [DashboardController::class, 'index'])->name('dashboard.index');

        // Search Routes
        Route::get('/client/search', [ClientController::class, 'search'])->name('client.search');
        Route::get('/team/search', [TeamController::class, 'search'])->name('team.search');
        Route::get('/service/search', [ServiceController::class, 'search'])->name('service.search');
        Route::get('/team_member/search', [TeamMemberController::class, 'search'])->name('team_members.search');
        Route::get('testimonial/search', [TestimonialController::class, 'search'])->name('testimonial.search');

        // Resource Routes
        Route::resource('client', ClientController::class);
        Route::resource('team', TeamController::class);
        Route::resource('team_members', TeamMemberController::class);
        Route::resource('service', ServiceController::class);
        Route::resource('social_media', SocialMediaController::class);
        Route::resource('testimonial', TestimonialController::class);
        Route::resource('information-contact', InformationContactController::class);
        Route::resource('youtube-videos', YoutubeVideoController::class);
        Route::post('youtube-videos/{video}/toggle-status', [YoutubeVideoController::class, 'toggleStatus'])
            ->name('youtube-videos.toggle-status');
        
        // Message Routes (kecuali store)
        Route::resource('messages', MessageController::class)->except(['store']);
        Route::post('/messages/{id}/reply', [MessageController::class, 'reply'])->name('messages.reply');
    });

    Route::get('/logout', [AuthController::class, 'logout'])->name('auth.logout');
});

// Storage Route
Route::get('/storage/{folder}/{filename}', function ($folder, $filename) {
    $path = storage_path('app/public/' . $folder . '/' . $filename);

    if (!File::exists($path)) {
        abort(404);
    }

    $file = File::get($path);
    $type = File::mimeType($path);

    $response = Response::make($file, 200);
    $response->header("Content-Type", $type);
    return $response;
})->where('filename', '.*')->name('storage.file');
